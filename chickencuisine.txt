import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Chicken Cuisine App',
      theme: ThemeData(
        primarySwatch: Colors.green,
        scaffoldBackgroundColor: Colors.white, // Added scaffold background color
      ),
      home: HomeScreen(),
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Chicken Cuisine App'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Image from network
            Image.network(
              'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSTlGogM1zv7WohBWOuxIiRzDXzmKMK9vVcpg&s',
              width: 300.0,
            ),
            SizedBox(height: 20.0),
            // Text below the image
            Text(
              'Welcome to chicken cuisine app',
              style: TextStyle(
                fontSize: 24.0,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: 20.0),
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => ChickenMenuScreen()),
                );
              },
              child: Text('View Menu'),
            ),
          ],
        ),
      ),
    );
  }
}

class ChickenMenuScreen extends StatefulWidget {
  @override
  _ChickenMenuScreenState createState() => _ChickenMenuScreenState();
}

class _ChickenMenuScreenState extends State<ChickenMenuScreen> {
  final List<ChickenItem> chickenItems = [
    ChickenItem(
      name: 'Grilled Chicken',
      description: 'Juicy grilled chicken served with vegetables.',
      imageUrl:
          'https://hips.hearstapps.com/hmg-prod/images/grilled-chicken-breast-index-6626cdb057b5b.jpg?crop=0.889166406493912xw:1xh;center,top&resize=1200:*',
      price: '\$700.99',
    ),
    ChickenItem(
      name: 'Chicken Lolipops',
      description: 'Spicy chicken lolipops with traditional spices.',
      imageUrl:
          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp-NkDSBxTddG83y14od8ijqoQs_HbXF1hEg&s',
      price: '\$150.99',
    ),
    ChickenItem(
      name: 'Chicken 65',
      description: 'Spicy and tangy fried chicken dish originating from India.',
      imageUrl:
          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTYDIFAlzVATAizvpn3wnJ7ML202PDWj8w1jw&s',
      price: '\$250.99',
    ),
    ChickenItem(
      name: 'Chicken Nuggets',
      description: 'Spicy chicken nuggets with traditional spices.',
      imageUrl:
          'https://upload.wikimedia.org/wikipedia/commons/6/64/Chicken_Nuggets.jpg',
      price: '\$150.99',
    ),
    ChickenItem(
      name: 'Chicken Pizza',
      description:
          'Delicious pizza topped with seasoned chicken and melted cheese.',
      imageUrl:
          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRaTnD0_B1mZiOEc38C62n5oimw7Ii1nlsAaw&s',
      price: '\$100.99',
    ),
    ChickenItem(
      name: 'Chicken Wings',
      description: 'Spicy chicken wings with traditional spices.',
      imageUrl:
          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTf642KGRq69Xtb4oy8FWyPPrB2uCTOXuhoqw&s',
      price: '\$250.99',
    ),
    ChickenItem(
      name: 'Chicken Bucket',
      description: 'A bucket of assorted spicy chicken pieces.',
      imageUrl:
          'https://4.imimg.com/data4/IW/LR/GLADMIN-12825271/buckets-500x500.png',
      price: '\$999.99',
    ),
    ChickenItem(
      name: 'Chicken Kebab',
      description: 'Grilled chicken kebabs with traditional spices.',
      imageUrl:
          'https://www.shutterstock.com/image-photo/shish-kebab-mushrooms-cherry-tomato-600nw-1347040721.jpg',
      price: '\$500.99',
    ),
    ChickenItem(
      name: 'Chicken Butter',
      description: 'Buttery and creamy chicken dish with traditional spices.',
      imageUrl:
          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4cAu0oO4zbJHNKOIo4LQ8EO1_IbCDjRQQKw&s',
      price: '\$850.99',
    ),
    ChickenItem(
      name: 'Chilli Chicken',
      description: 'Spicy and flavorful Indo-Chinese chicken dish.',
      imageUrl:
          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXZSH50koiYVTwIIaqtRQVcm22xH-E_092jA&s',
      price: '\$170.99',
    ),
    ChickenItem(
      name: 'Chicken Coriander',
      description: 'Chicken cooked with fresh coriander and spices.',
      imageUrl:
          'https://images.immediate.co.uk/production/volatile/sites/30/2020/08/coriander-rice-5e68abe.jpg?quality=90&resize=440,400',
      price: '\$350.99',
    ),
    // Add more chicken items as needed
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Chicken Menu'),
        actions: [
          IconButton(
            icon: Icon(Icons.shopping_cart),
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                    builder: (context) =>
                        CartScreen(chickenItems: chickenItems)),
              );
            },
          ),
          IconButton(
            icon: Icon(Icons.favorite),
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                    builder: (context) =>
                        WishlistScreen(chickenItems: chickenItems)),
              );
            },
          ),
          IconButton(
            icon: Icon(Icons.account_circle),
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => ProfileScreen()),
              );
            },
          ),
        ],
      ),
      body: GridView.builder(
        padding: EdgeInsets.all(10),
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 2,
          childAspectRatio: 0.75,
          crossAxisSpacing: 10,
          mainAxisSpacing: 10,
        ),
        itemCount: chickenItems.length,
        itemBuilder: (context, index) {
          final item = chickenItems[index];
          return GestureDetector(
            onTap: () {
              _showAddToCartOrWishlistDialog(context, item);
            },
            child: Card(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.stretch,
                children: <Widget>[
                  Expanded(
                    child: ClipRRect(
                      borderRadius: BorderRadius.vertical(top: Radius.circular(4)),
                      child: Image.network(
                        item.imageUrl,
                        fit: BoxFit.cover,
                      ),
                    ),
                  ),
                  Padding(
                    padding: EdgeInsets.all(8),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        Text(
                          item.name,
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            fontSize: 16,
                          ),
                          maxLines: 2,
                          overflow: TextOverflow.ellipsis,
                        ),
                        SizedBox(height: 4),
                        Text(
                          item.description,
                          style: TextStyle(fontSize: 12),
                          maxLines: 2,
                          overflow: TextOverflow.ellipsis,
                        ),
                        SizedBox(height: 4),
                        Text(
                          item.price,
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Colors.green,
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }

  void _showAddToCartOrWishlistDialog(BuildContext context, ChickenItem item) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Add to'),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: <Widget>[
              ListTile(
                leading: Icon(Icons.shopping_cart),
                title: Text('Add to Cart'),
                onTap: () {
                  Navigator.pop(context);
                  _addToCart(item);
                },
              ),
              ListTile(
                leading: Icon(Icons.favorite),
                title: Text('Add to Wishlist'),
                onTap: () {
                  Navigator.pop(context);
                  _addToWishlist(item);
                },
              ),
            ],
          ),
        );
      },
    );
  }

  void _addToCart(ChickenItem item) {
    setState(() {
      item.isInCart = true;
    });
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('Added to Cart: ${item.name}'),
        duration: Duration(seconds: 2),
      ),
    );
  }

  void _addToWishlist(ChickenItem item) {
    setState(() {
      item.isInWishlist = true;
    });
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('Added to Wishlist: ${item.name}'),
        duration: Duration(seconds: 2),
      ),
    );
  }
}

class ChickenItem {
  final String name;
  final String description;
  final String imageUrl;
  final String price;
  bool isInWishlist;
  bool isInCart;

  ChickenItem({
    required this.name,
    required this.description,
    required this.imageUrl,
    required this.price,
    this.isInWishlist = false,
    this.isInCart = false,
  });
}

class CartScreen extends StatelessWidget {
  final List<ChickenItem> chickenItems;

  CartScreen({required this.chickenItems});

  @override
  Widget build(BuildContext context) {
    final cartItems = chickenItems.where((item) => item.isInCart).toList();

    return Scaffold(
      appBar: AppBar(
        title: Text('Cart'),
      ),
      body: cartItems.isEmpty
          ? Center(child: Text('Cart is empty'))
          : ListView.builder(
              itemCount: cartItems.length,
              itemBuilder: (context, index) {
                final item = cartItems[index];
                return Card(
                  child: ListTile(
                    leading: Image.network(
                      item.imageUrl,
                      width: 50,
                      height: 50,
                      fit: BoxFit.cover,
                    ),
                    title: Text(item.name),
                    subtitle: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(item.description),
                        SizedBox(height: 5),
                        Text(
                          item.price,
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Colors.green,
                          ),
                        ),
                      ],
                    ),
                    trailing: IconButton(
                      icon: Icon(Icons.remove_shopping_cart),
                      onPressed: () {
                        item.isInCart = false;
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Removed from Cart: ${item.name}'),
                            duration: Duration(seconds: 2),
                          ),
                        );
                      },
                    ),
                  ),
                );
              },
            ),
    );
  }
}

class WishlistScreen extends StatelessWidget {
  final List<ChickenItem> chickenItems;

  WishlistScreen({required this.chickenItems});

  @override
  Widget build(BuildContext context) {
    final wishlistItems =
        chickenItems.where((item) => item.isInWishlist).toList();

    return Scaffold(
      appBar: AppBar(
        title: Text('Wishlist'),
      ),
      body: wishlistItems.isEmpty
          ? Center(child: Text('No items in wishlist'))
          : ListView.builder(
              itemCount: wishlistItems.length,
              itemBuilder: (context, index) {
                final item = wishlistItems[index];
                return Card(
                  child: ListTile(
                    leading: Image.network(
                      item.imageUrl,
                      width: 50,
                      height: 50,
                      fit: BoxFit.cover,
                    ),
                    title: Text(item.name),
                    subtitle: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(item.description),
                        SizedBox(height: 5),
                        Text(
                          item.price,
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Colors.green,
                          ),
                        ),
                      ],
                    ),
                    trailing: IconButton(
                      icon: Icon(Icons.remove_circle),
                      onPressed: () {
                        item.isInWishlist = false;
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Removed from Wishlist: ${item.name}'),
                            duration: Duration(seconds: 2),
                          ),
                        );
                      },
                    ),
                  ),
                );
              },
            ),
    );
  }
}

class ProfileScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Profile'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            CircleAvatar(
              radius: 50,
              backgroundImage: NetworkImage(
                'https://randomuser.me/api/portraits/men/1.jpg', // Replace with user's profile picture URL
              ),
            ),
            SizedBox(height: 20),
            Text(
              'Customer Name', // Replace with actual customer name
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: 10),
            Text(
              'Phone Number: 123-456-7890', // Replace with actual phone number
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 10),
            Text(
              'Address: 123, Main Street, City', // Replace with actual address
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 10),
            Text(
              'Email: example@example.com', // Replace with actual email
              style: TextStyle(fontSize: 18),
            ),
            SizedBox(height: 20),
            Text(
              'Special Items',
              style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
            Expanded(
              child: ListView.builder(
                itemCount: 1, // Limiting to show 3 favorite items for demonstration
                itemBuilder: (context, index) {
                  final item = ChickenItem(
                    name: 'Chilli Chicken', // Replace with actual favorite item names
                    description: 'Tasty spicy chicken', // Replace with actual descriptions
                    imageUrl:
                        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ42sGJwWnm4v-vi8xVMZXBiODs-N1DU9J_fQ&s', // Replace with actual image URLs
                    price: '\$120.99', // Replace with actual prices
                  );
                  return ListTile(
                    leading: Image.network(
                      item.imageUrl,
                      width: 50,
                      height: 50,
                      fit: BoxFit.cover,
                    ),
                    title: Text(item.name),
                    subtitle: Text(item.description),
                    trailing: Text(
                      item.price,
                      style: TextStyle(
                        fontWeight: FontWeight.bold,
                        color: Colors.green,
                      ),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}


